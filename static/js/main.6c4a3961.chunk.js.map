{"version":3,"sources":["components/App.jsx","index.js"],"names":["App","time","Date","toLocaleTimeString","useState","isTime","setTime","isClock","setClock","setInterval","newClock","className","onClick","newTime","ReactDOM","render","document","getElementById"],"mappings":"yLAiCeA,MA7Bf,WACE,IAAMC,GAAO,IAAIC,MAAOC,qBAExB,EAAyBC,mBAASH,GAAlC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAA2BF,mBAASH,GAApC,mBAAOM,EAAP,KAAeC,EAAf,KAaA,OAFFC,aAJiB,WACf,IAAMC,GAAW,IAAIR,MAAOC,qBAC5BK,EAASE,KAEW,KAGlB,yBAAKC,UAAU,aACb,oCACA,4BAAKJ,GACL,2CACA,4BAAKF,GAEL,4BAAQO,QAlBE,WACd,IAAMC,GAAU,IAAIX,MAAOC,qBAC3BG,EAAQO,KAgBJ,cCxBNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.6c4a3961.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n\n\n\nfunction App() {\n  const time = new Date().toLocaleTimeString();\n\n  const [isTime,setTime] = useState(time);\n  const [isClock,setClock] = useState(time);\n\nconst getTime = () => {\n  const newTime = new Date().toLocaleTimeString();\n  setTime(newTime);\n}\n\nconst getClock = () => {\n  const newClock = new Date().toLocaleTimeString();\n  setClock(newClock);\n}\nsetInterval(getClock, 1000);\n\n  return (\n    <div className=\"container\">\n      <p>Clock</p>\n      <h2>{isClock}</h2>\n      <p>Button Click</p>\n      <h1>{isTime}</h1>\n      \n      <button onClick={getTime}>Get Time</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//Challenge:\n//1. Given that you can get the current time using:\n\n//Show the latest time in the <h1> when the Get Time button\n//is pressed.\n\n//2. Given that you can get code to be called every second\n//using the setInterval method.\n//Can you get the time in your <h1> to update every second?\n\n//e.g. uncomment the code below to see Hey printed every second.\n// function sayHi() {\n//   console.log(\"Hey\");\n// }\n// setInterval(sayHi, 1000);\n"],"sourceRoot":""}